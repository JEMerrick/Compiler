Nonterminals useless in grammar

   PARAM_LIST
   $@1


Terminals unused in grammar

   T_EXPONENT
   T_BNOT
   T_NOT


Rules useless in grammar

   83 FUNDEC: TYPE T_VARIABLE T_LBRAC PARAM_LIST T_RBRAC T_LCURL SCOPE T_RCURL
   84       | TYPE T_VARIABLE T_LBRAC PARAM_LIST T_RBRAC T_SEMIC

   85 $@1: %empty

   86 PARAM_LIST: PARAM_LIST T_COMMA TYPE T_VARIABLE $@1 TYPE T_VARIABLE


State 27 conflicts: 1 shift/reduce
State 101 conflicts: 2 reduce/reduce
State 102 conflicts: 2 reduce/reduce
State 139 conflicts: 1 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: PROG

    2 PROG: DECLR_ALL
    3     | PROG DECLR_ALL

    4 DECLR_ALL: FUNDEC
    5          | DEC_ST

    6 FUNDEC: TYPE T_VARIABLE T_LBRAC T_RBRAC T_LCURL SCOPE T_RCURL
    7       | TYPE T_VARIABLE T_LBRAC T_RBRAC T_SEMIC

    8 TYPE: T_INT
    9     | T_VOID
   10     | T_CHAR
   11     | T_SHORT
   12     | T_LONG
   13     | T_FLOAT
   14     | T_DOUBLE
   15     | T_SIGNED

   16 SCOPE: SCOPE STMT
   17      | STMT

   18 EXPR_ST: T_SEMIC
   19        | EXPR T_SEMIC

   20 EXPR: EXPR_ASSIGN

   21 EXPR_ASSIGN: EXPR_COND
   22            | T_VARIABLE T_EQUAL EXPR_ASSIGN
   23            | T_VARIABLE T_ADDEQUAL EXPR_ASSIGN
   24            | T_VARIABLE T_SUBEQUAL EXPR_ASSIGN

   25 EXPR_COND: OR

   26 OR: AND
   27   | AND T_OR BOR

   28 AND: BOR
   29    | AND T_AND BOR

   30 BOR: BXOR
   31    | BOR T_BOR BXOR

   32 BXOR: BAND
   33     | BOR T_BXOR BXOR

   34 BAND: EQUAL
   35     | BAND T_BAND EQUAL

   36 EQUAL: LESS
   37      | EQUAL T_EQUAL LESS
   38      | EQUAL T_NEQUAL LESS

   39 LESS: SHIFT
   40     | LESS T_LT SHIFT
   41     | LESS T_GT SHIFT
   42     | LESS T_LEQUAL SHIFT
   43     | LESS T_GEQUAL SHIFT

   44 SHIFT: ADD
   45      | SHIFT T_LSHIFT ADD
   46      | SHIFT T_RSHIFT ADD

   47 ADD: MUL
   48    | ADD T_PLUS MUL
   49    | ADD T_MINUS MUL

   50 MUL: UNARY
   51    | MUL T_TIMES UNARY
   52    | MUL T_DIVIDE UNARY
   53    | MUL T_MOD UNARY

   54 UNARY: POSTFIX
   55      | T_DECREM UNARY
   56      | T_INCREM UNARY

   57 POSTFIX: PRIMATIVE
   58        | POSTFIX T_INCREM
   59        | POSTFIX T_DECREM

   60 PRIMATIVE: T_VARIABLE
   61          | T_NUMBER
   62          | T_LBRAC EXPR T_RBRAC

   63 STMT: JMP_ST
   64     | EXPR_ST
   65     | IF_ST
   66     | ITER_ST
   67     | NEW_SCOPE
   68     | DEC_ST

   69 JMP_ST: T_RETURN T_SEMIC
   70       | T_RETURN EXPR T_SEMIC

   71 IF_ST: T_IF T_LBRAC EXPR T_RBRAC STMT
   72      | T_IF T_LBRAC EXPR T_RBRAC STMT T_ELSE STMT

   73 ITER_ST: T_WHILE T_LBRAC EXPR T_RBRAC STMT
   74        | T_DO STMT T_WHILE T_LBRAC EXPR T_RBRAC T_SEMIC
   75        | T_FOR T_LBRAC EXPR_ST EXPR_ST T_RBRAC STMT
   76        | T_FOR T_LBRAC EXPR_ST EXPR_ST EXPR T_RBRAC STMT

   77 NEW_SCOPE: T_LCURL SCOPE T_RCURL

   78 DEC_ST: TYPE DEC_LIST T_SEMIC

   79 DEC_LIST: VAR_DEC
   80         | DEC_LIST T_COMMA VAR_DEC

   81 VAR_DEC: T_VARIABLE T_EQUAL EXPR
   82        | T_VARIABLE


Terminals, with rules where they appear

$end (0) 0
error (256)
T_TIMES (258) 51
T_DIVIDE (259) 52
T_PLUS (260) 48
T_MINUS (261) 49
T_EXPONENT (262)
T_LBRAC (263) 6 7 62 71 72 73 74 75 76
T_RBRAC (264) 6 7 62 71 72 73 74 75 76
T_LCURL (265) 6 77
T_RCURL (266) 6 77
T_NUMBER (267) 61
T_VARIABLE (268) 6 7 22 23 24 60 81 82
T_SEMIC (269) 7 18 19 69 70 74 78
T_COMMA (270) 80
T_LSHIFT (271) 45
T_RSHIFT (272) 46
T_EQUAL (273) 22 37 81
T_NEQUAL (274) 38
T_GT (275) 41
T_LT (276) 40
T_LEQUAL (277) 42
T_GEQUAL (278) 43
T_BNOT (279)
T_NOT (280)
T_AND (281) 29
T_OR (282) 27
T_BAND (283) 35
T_BOR (284) 31
T_BXOR (285) 33
T_MOD (286) 53
T_ADDEQUAL (287) 23
T_SUBEQUAL (288) 24
T_INCREM (289) 56 58
T_DECREM (290) 55 59
T_WHILE (291) 73 74
T_DO (292) 74
T_IF (293) 71 72
T_ELSE (294) 72
T_FOR (295) 75 76
T_INT (296) 8
T_VOID (297) 9
T_CHAR (298) 10
T_SHORT (299) 11
T_LONG (300) 12
T_FLOAT (301) 13
T_DOUBLE (302) 14
T_SIGNED (303) 15
T_RETURN (304) 69 70


Nonterminals, with rules where they appear

$accept (50)
    on left: 0
ROOT (51)
    on left: 1, on right: 0
PROG (52)
    on left: 2 3, on right: 1 3
DECLR_ALL (53)
    on left: 4 5, on right: 2 3
FUNDEC (54)
    on left: 6 7, on right: 4
TYPE (55)
    on left: 8 9 10 11 12 13 14 15, on right: 6 7 78
SCOPE (56)
    on left: 16 17, on right: 6 16 77
EXPR_ST (57)
    on left: 18 19, on right: 64 75 76
EXPR (58)
    on left: 20, on right: 19 62 70 71 72 73 74 76 81
EXPR_ASSIGN (59)
    on left: 21 22 23 24, on right: 20 22 23 24
EXPR_COND (60)
    on left: 25, on right: 21
OR (61)
    on left: 26 27, on right: 25
AND (62)
    on left: 28 29, on right: 26 27 29
BOR (63)
    on left: 30 31, on right: 27 28 29 31 33
BXOR (64)
    on left: 32 33, on right: 30 31 33
BAND (65)
    on left: 34 35, on right: 32 35
EQUAL (66)
    on left: 36 37 38, on right: 34 35 37 38
LESS (67)
    on left: 39 40 41 42 43, on right: 36 37 38 40 41 42 43
SHIFT (68)
    on left: 44 45 46, on right: 39 40 41 42 43 45 46
ADD (69)
    on left: 47 48 49, on right: 44 45 46 48 49
MUL (70)
    on left: 50 51 52 53, on right: 47 48 49 51 52 53
UNARY (71)
    on left: 54 55 56, on right: 50 51 52 53 55 56
POSTFIX (72)
    on left: 57 58 59, on right: 54 58 59
PRIMATIVE (73)
    on left: 60 61 62, on right: 57
STMT (74)
    on left: 63 64 65 66 67 68, on right: 16 17 71 72 73 74 75 76
JMP_ST (75)
    on left: 69 70, on right: 63
IF_ST (76)
    on left: 71 72, on right: 65
ITER_ST (77)
    on left: 73 74 75 76, on right: 66
NEW_SCOPE (78)
    on left: 77, on right: 67
DEC_ST (79)
    on left: 78, on right: 5 68
DEC_LIST (80)
    on left: 79 80, on right: 78 80
VAR_DEC (81)
    on left: 81 82, on right: 79 80


State 0

    0 $accept: . ROOT $end

    T_INT     shift, and go to state 1
    T_VOID    shift, and go to state 2
    T_CHAR    shift, and go to state 3
    T_SHORT   shift, and go to state 4
    T_LONG    shift, and go to state 5
    T_FLOAT   shift, and go to state 6
    T_DOUBLE  shift, and go to state 7
    T_SIGNED  shift, and go to state 8

    ROOT       go to state 9
    PROG       go to state 10
    DECLR_ALL  go to state 11
    FUNDEC     go to state 12
    TYPE       go to state 13
    DEC_ST     go to state 14


State 1

    8 TYPE: T_INT .

    $default  reduce using rule 8 (TYPE)


State 2

    9 TYPE: T_VOID .

    $default  reduce using rule 9 (TYPE)


State 3

   10 TYPE: T_CHAR .

    $default  reduce using rule 10 (TYPE)


State 4

   11 TYPE: T_SHORT .

    $default  reduce using rule 11 (TYPE)


State 5

   12 TYPE: T_LONG .

    $default  reduce using rule 12 (TYPE)


State 6

   13 TYPE: T_FLOAT .

    $default  reduce using rule 13 (TYPE)


State 7

   14 TYPE: T_DOUBLE .

    $default  reduce using rule 14 (TYPE)


State 8

   15 TYPE: T_SIGNED .

    $default  reduce using rule 15 (TYPE)


State 9

    0 $accept: ROOT . $end

    $end  shift, and go to state 15


State 10

    1 ROOT: PROG .
    3 PROG: PROG . DECLR_ALL

    T_INT     shift, and go to state 1
    T_VOID    shift, and go to state 2
    T_CHAR    shift, and go to state 3
    T_SHORT   shift, and go to state 4
    T_LONG    shift, and go to state 5
    T_FLOAT   shift, and go to state 6
    T_DOUBLE  shift, and go to state 7
    T_SIGNED  shift, and go to state 8

    $default  reduce using rule 1 (ROOT)

    DECLR_ALL  go to state 16
    FUNDEC     go to state 12
    TYPE       go to state 13
    DEC_ST     go to state 14


State 11

    2 PROG: DECLR_ALL .

    $default  reduce using rule 2 (PROG)


State 12

    4 DECLR_ALL: FUNDEC .

    $default  reduce using rule 4 (DECLR_ALL)


State 13

    6 FUNDEC: TYPE . T_VARIABLE T_LBRAC T_RBRAC T_LCURL SCOPE T_RCURL
    7       | TYPE . T_VARIABLE T_LBRAC T_RBRAC T_SEMIC
   78 DEC_ST: TYPE . DEC_LIST T_SEMIC

    T_VARIABLE  shift, and go to state 17

    DEC_LIST  go to state 18
    VAR_DEC   go to state 19


State 14

    5 DECLR_ALL: DEC_ST .

    $default  reduce using rule 5 (DECLR_ALL)


State 15

    0 $accept: ROOT $end .

    $default  accept


State 16

    3 PROG: PROG DECLR_ALL .

    $default  reduce using rule 3 (PROG)


State 17

    6 FUNDEC: TYPE T_VARIABLE . T_LBRAC T_RBRAC T_LCURL SCOPE T_RCURL
    7       | TYPE T_VARIABLE . T_LBRAC T_RBRAC T_SEMIC
   81 VAR_DEC: T_VARIABLE . T_EQUAL EXPR
   82        | T_VARIABLE .

    T_LBRAC  shift, and go to state 20
    T_EQUAL  shift, and go to state 21

    $default  reduce using rule 82 (VAR_DEC)


State 18

   78 DEC_ST: TYPE DEC_LIST . T_SEMIC
   80 DEC_LIST: DEC_LIST . T_COMMA VAR_DEC

    T_SEMIC  shift, and go to state 22
    T_COMMA  shift, and go to state 23


State 19

   79 DEC_LIST: VAR_DEC .

    $default  reduce using rule 79 (DEC_LIST)


State 20

    6 FUNDEC: TYPE T_VARIABLE T_LBRAC . T_RBRAC T_LCURL SCOPE T_RCURL
    7       | TYPE T_VARIABLE T_LBRAC . T_RBRAC T_SEMIC

    T_RBRAC  shift, and go to state 24


State 21

   81 VAR_DEC: T_VARIABLE T_EQUAL . EXPR

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 30
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 22

   78 DEC_ST: TYPE DEC_LIST T_SEMIC .

    $default  reduce using rule 78 (DEC_ST)


State 23

   80 DEC_LIST: DEC_LIST T_COMMA . VAR_DEC

    T_VARIABLE  shift, and go to state 46

    VAR_DEC  go to state 47


State 24

    6 FUNDEC: TYPE T_VARIABLE T_LBRAC T_RBRAC . T_LCURL SCOPE T_RCURL
    7       | TYPE T_VARIABLE T_LBRAC T_RBRAC . T_SEMIC

    T_LCURL  shift, and go to state 48
    T_SEMIC  shift, and go to state 49


State 25

   62 PRIMATIVE: T_LBRAC . EXPR T_RBRAC

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 50
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 26

   61 PRIMATIVE: T_NUMBER .

    $default  reduce using rule 61 (PRIMATIVE)


State 27

   22 EXPR_ASSIGN: T_VARIABLE . T_EQUAL EXPR_ASSIGN
   23            | T_VARIABLE . T_ADDEQUAL EXPR_ASSIGN
   24            | T_VARIABLE . T_SUBEQUAL EXPR_ASSIGN
   60 PRIMATIVE: T_VARIABLE .

    T_EQUAL     shift, and go to state 51
    T_ADDEQUAL  shift, and go to state 52
    T_SUBEQUAL  shift, and go to state 53

    T_EQUAL   [reduce using rule 60 (PRIMATIVE)]
    $default  reduce using rule 60 (PRIMATIVE)


State 28

   56 UNARY: T_INCREM . UNARY

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    UNARY      go to state 55
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 29

   55 UNARY: T_DECREM . UNARY

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    UNARY      go to state 56
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 30

   81 VAR_DEC: T_VARIABLE T_EQUAL EXPR .

    $default  reduce using rule 81 (VAR_DEC)


State 31

   20 EXPR: EXPR_ASSIGN .

    $default  reduce using rule 20 (EXPR)


State 32

   21 EXPR_ASSIGN: EXPR_COND .

    $default  reduce using rule 21 (EXPR_ASSIGN)


State 33

   25 EXPR_COND: OR .

    $default  reduce using rule 25 (EXPR_COND)


State 34

   26 OR: AND .
   27   | AND . T_OR BOR
   29 AND: AND . T_AND BOR

    T_AND  shift, and go to state 57
    T_OR   shift, and go to state 58

    $default  reduce using rule 26 (OR)


State 35

   28 AND: BOR .
   31 BOR: BOR . T_BOR BXOR
   33 BXOR: BOR . T_BXOR BXOR

    T_BOR   shift, and go to state 59
    T_BXOR  shift, and go to state 60

    $default  reduce using rule 28 (AND)


State 36

   30 BOR: BXOR .

    $default  reduce using rule 30 (BOR)


State 37

   32 BXOR: BAND .
   35 BAND: BAND . T_BAND EQUAL

    T_BAND  shift, and go to state 61

    $default  reduce using rule 32 (BXOR)


State 38

   34 BAND: EQUAL .
   37 EQUAL: EQUAL . T_EQUAL LESS
   38      | EQUAL . T_NEQUAL LESS

    T_EQUAL   shift, and go to state 62
    T_NEQUAL  shift, and go to state 63

    $default  reduce using rule 34 (BAND)


State 39

   36 EQUAL: LESS .
   40 LESS: LESS . T_LT SHIFT
   41     | LESS . T_GT SHIFT
   42     | LESS . T_LEQUAL SHIFT
   43     | LESS . T_GEQUAL SHIFT

    T_GT      shift, and go to state 64
    T_LT      shift, and go to state 65
    T_LEQUAL  shift, and go to state 66
    T_GEQUAL  shift, and go to state 67

    $default  reduce using rule 36 (EQUAL)


State 40

   39 LESS: SHIFT .
   45 SHIFT: SHIFT . T_LSHIFT ADD
   46      | SHIFT . T_RSHIFT ADD

    T_LSHIFT  shift, and go to state 68
    T_RSHIFT  shift, and go to state 69

    $default  reduce using rule 39 (LESS)


State 41

   44 SHIFT: ADD .
   48 ADD: ADD . T_PLUS MUL
   49    | ADD . T_MINUS MUL

    T_PLUS   shift, and go to state 70
    T_MINUS  shift, and go to state 71

    $default  reduce using rule 44 (SHIFT)


State 42

   47 ADD: MUL .
   51 MUL: MUL . T_TIMES UNARY
   52    | MUL . T_DIVIDE UNARY
   53    | MUL . T_MOD UNARY

    T_TIMES   shift, and go to state 72
    T_DIVIDE  shift, and go to state 73
    T_MOD     shift, and go to state 74

    $default  reduce using rule 47 (ADD)


State 43

   50 MUL: UNARY .

    $default  reduce using rule 50 (MUL)


State 44

   54 UNARY: POSTFIX .
   58 POSTFIX: POSTFIX . T_INCREM
   59        | POSTFIX . T_DECREM

    T_INCREM  shift, and go to state 75
    T_DECREM  shift, and go to state 76

    $default  reduce using rule 54 (UNARY)


State 45

   57 POSTFIX: PRIMATIVE .

    $default  reduce using rule 57 (POSTFIX)


State 46

   81 VAR_DEC: T_VARIABLE . T_EQUAL EXPR
   82        | T_VARIABLE .

    T_EQUAL  shift, and go to state 21

    $default  reduce using rule 82 (VAR_DEC)


State 47

   80 DEC_LIST: DEC_LIST T_COMMA VAR_DEC .

    $default  reduce using rule 80 (DEC_LIST)


State 48

    6 FUNDEC: TYPE T_VARIABLE T_LBRAC T_RBRAC T_LCURL . SCOPE T_RCURL

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    SCOPE        go to state 85
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 88
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 49

    7 FUNDEC: TYPE T_VARIABLE T_LBRAC T_RBRAC T_SEMIC .

    $default  reduce using rule 7 (FUNDEC)


State 50

   62 PRIMATIVE: T_LBRAC EXPR . T_RBRAC

    T_RBRAC  shift, and go to state 94


State 51

   22 EXPR_ASSIGN: T_VARIABLE T_EQUAL . EXPR_ASSIGN

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR_ASSIGN  go to state 95
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 52

   23 EXPR_ASSIGN: T_VARIABLE T_ADDEQUAL . EXPR_ASSIGN

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR_ASSIGN  go to state 96
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 53

   24 EXPR_ASSIGN: T_VARIABLE T_SUBEQUAL . EXPR_ASSIGN

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR_ASSIGN  go to state 97
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 54

   60 PRIMATIVE: T_VARIABLE .

    $default  reduce using rule 60 (PRIMATIVE)


State 55

   56 UNARY: T_INCREM UNARY .

    $default  reduce using rule 56 (UNARY)


State 56

   55 UNARY: T_DECREM UNARY .

    $default  reduce using rule 55 (UNARY)


State 57

   29 AND: AND T_AND . BOR

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    BOR        go to state 98
    BXOR       go to state 36
    BAND       go to state 37
    EQUAL      go to state 38
    LESS       go to state 39
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 58

   27 OR: AND T_OR . BOR

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    BOR        go to state 99
    BXOR       go to state 36
    BAND       go to state 37
    EQUAL      go to state 38
    LESS       go to state 39
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 59

   31 BOR: BOR T_BOR . BXOR

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    BOR        go to state 100
    BXOR       go to state 101
    BAND       go to state 37
    EQUAL      go to state 38
    LESS       go to state 39
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 60

   33 BXOR: BOR T_BXOR . BXOR

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    BOR        go to state 100
    BXOR       go to state 102
    BAND       go to state 37
    EQUAL      go to state 38
    LESS       go to state 39
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 61

   35 BAND: BAND T_BAND . EQUAL

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EQUAL      go to state 103
    LESS       go to state 39
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 62

   37 EQUAL: EQUAL T_EQUAL . LESS

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    LESS       go to state 104
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 63

   38 EQUAL: EQUAL T_NEQUAL . LESS

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    LESS       go to state 105
    SHIFT      go to state 40
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 64

   41 LESS: LESS T_GT . SHIFT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    SHIFT      go to state 106
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 65

   40 LESS: LESS T_LT . SHIFT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    SHIFT      go to state 107
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 66

   42 LESS: LESS T_LEQUAL . SHIFT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    SHIFT      go to state 108
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 67

   43 LESS: LESS T_GEQUAL . SHIFT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    SHIFT      go to state 109
    ADD        go to state 41
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 68

   45 SHIFT: SHIFT T_LSHIFT . ADD

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    ADD        go to state 110
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 69

   46 SHIFT: SHIFT T_RSHIFT . ADD

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    ADD        go to state 111
    MUL        go to state 42
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 70

   48 ADD: ADD T_PLUS . MUL

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    MUL        go to state 112
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 71

   49 ADD: ADD T_MINUS . MUL

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    MUL        go to state 113
    UNARY      go to state 43
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 72

   51 MUL: MUL T_TIMES . UNARY

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    UNARY      go to state 114
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 73

   52 MUL: MUL T_DIVIDE . UNARY

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    UNARY      go to state 115
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 74

   53 MUL: MUL T_MOD . UNARY

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 54
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    UNARY      go to state 116
    POSTFIX    go to state 44
    PRIMATIVE  go to state 45


State 75

   58 POSTFIX: POSTFIX T_INCREM .

    $default  reduce using rule 58 (POSTFIX)


State 76

   59 POSTFIX: POSTFIX T_DECREM .

    $default  reduce using rule 59 (POSTFIX)


State 77

   77 NEW_SCOPE: T_LCURL . SCOPE T_RCURL

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    SCOPE        go to state 117
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 88
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 78

   18 EXPR_ST: T_SEMIC .

    $default  reduce using rule 18 (EXPR_ST)


State 79

   73 ITER_ST: T_WHILE . T_LBRAC EXPR T_RBRAC STMT

    T_LBRAC  shift, and go to state 118


State 80

   74 ITER_ST: T_DO . STMT T_WHILE T_LBRAC EXPR T_RBRAC T_SEMIC

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 119
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 81

   71 IF_ST: T_IF . T_LBRAC EXPR T_RBRAC STMT
   72      | T_IF . T_LBRAC EXPR T_RBRAC STMT T_ELSE STMT

    T_LBRAC  shift, and go to state 120


State 82

   75 ITER_ST: T_FOR . T_LBRAC EXPR_ST EXPR_ST T_RBRAC STMT
   76        | T_FOR . T_LBRAC EXPR_ST EXPR_ST EXPR T_RBRAC STMT

    T_LBRAC  shift, and go to state 121


State 83

   69 JMP_ST: T_RETURN . T_SEMIC
   70       | T_RETURN . EXPR T_SEMIC

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 122
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 123
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 84

   78 DEC_ST: TYPE . DEC_LIST T_SEMIC

    T_VARIABLE  shift, and go to state 46

    DEC_LIST  go to state 18
    VAR_DEC   go to state 19


State 85

    6 FUNDEC: TYPE T_VARIABLE T_LBRAC T_RBRAC T_LCURL SCOPE . T_RCURL
   16 SCOPE: SCOPE . STMT

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_RCURL     shift, and go to state 124
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 125
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 86

   64 STMT: EXPR_ST .

    $default  reduce using rule 64 (STMT)


State 87

   19 EXPR_ST: EXPR . T_SEMIC

    T_SEMIC  shift, and go to state 126


State 88

   17 SCOPE: STMT .

    $default  reduce using rule 17 (SCOPE)


State 89

   63 STMT: JMP_ST .

    $default  reduce using rule 63 (STMT)


State 90

   65 STMT: IF_ST .

    $default  reduce using rule 65 (STMT)


State 91

   66 STMT: ITER_ST .

    $default  reduce using rule 66 (STMT)


State 92

   67 STMT: NEW_SCOPE .

    $default  reduce using rule 67 (STMT)


State 93

   68 STMT: DEC_ST .

    $default  reduce using rule 68 (STMT)


State 94

   62 PRIMATIVE: T_LBRAC EXPR T_RBRAC .

    $default  reduce using rule 62 (PRIMATIVE)


State 95

   22 EXPR_ASSIGN: T_VARIABLE T_EQUAL EXPR_ASSIGN .

    $default  reduce using rule 22 (EXPR_ASSIGN)


State 96

   23 EXPR_ASSIGN: T_VARIABLE T_ADDEQUAL EXPR_ASSIGN .

    $default  reduce using rule 23 (EXPR_ASSIGN)


State 97

   24 EXPR_ASSIGN: T_VARIABLE T_SUBEQUAL EXPR_ASSIGN .

    $default  reduce using rule 24 (EXPR_ASSIGN)


State 98

   29 AND: AND T_AND BOR .
   31 BOR: BOR . T_BOR BXOR
   33 BXOR: BOR . T_BXOR BXOR

    T_BOR   shift, and go to state 59
    T_BXOR  shift, and go to state 60

    $default  reduce using rule 29 (AND)


State 99

   27 OR: AND T_OR BOR .
   31 BOR: BOR . T_BOR BXOR
   33 BXOR: BOR . T_BXOR BXOR

    T_BOR   shift, and go to state 59
    T_BXOR  shift, and go to state 60

    $default  reduce using rule 27 (OR)


State 100

   31 BOR: BOR . T_BOR BXOR
   33 BXOR: BOR . T_BXOR BXOR

    T_BOR   shift, and go to state 59
    T_BXOR  shift, and go to state 60


State 101

   30 BOR: BXOR .
   31    | BOR T_BOR BXOR .

    T_BOR     reduce using rule 30 (BOR)
    T_BOR     [reduce using rule 31 (BOR)]
    T_BXOR    reduce using rule 30 (BOR)
    T_BXOR    [reduce using rule 31 (BOR)]
    $default  reduce using rule 31 (BOR)


State 102

   30 BOR: BXOR .
   33 BXOR: BOR T_BXOR BXOR .

    T_BOR     reduce using rule 30 (BOR)
    T_BOR     [reduce using rule 33 (BXOR)]
    T_BXOR    reduce using rule 30 (BOR)
    T_BXOR    [reduce using rule 33 (BXOR)]
    $default  reduce using rule 33 (BXOR)


State 103

   35 BAND: BAND T_BAND EQUAL .
   37 EQUAL: EQUAL . T_EQUAL LESS
   38      | EQUAL . T_NEQUAL LESS

    T_EQUAL   shift, and go to state 62
    T_NEQUAL  shift, and go to state 63

    $default  reduce using rule 35 (BAND)


State 104

   37 EQUAL: EQUAL T_EQUAL LESS .
   40 LESS: LESS . T_LT SHIFT
   41     | LESS . T_GT SHIFT
   42     | LESS . T_LEQUAL SHIFT
   43     | LESS . T_GEQUAL SHIFT

    T_GT      shift, and go to state 64
    T_LT      shift, and go to state 65
    T_LEQUAL  shift, and go to state 66
    T_GEQUAL  shift, and go to state 67

    $default  reduce using rule 37 (EQUAL)


State 105

   38 EQUAL: EQUAL T_NEQUAL LESS .
   40 LESS: LESS . T_LT SHIFT
   41     | LESS . T_GT SHIFT
   42     | LESS . T_LEQUAL SHIFT
   43     | LESS . T_GEQUAL SHIFT

    T_GT      shift, and go to state 64
    T_LT      shift, and go to state 65
    T_LEQUAL  shift, and go to state 66
    T_GEQUAL  shift, and go to state 67

    $default  reduce using rule 38 (EQUAL)


State 106

   41 LESS: LESS T_GT SHIFT .
   45 SHIFT: SHIFT . T_LSHIFT ADD
   46      | SHIFT . T_RSHIFT ADD

    T_LSHIFT  shift, and go to state 68
    T_RSHIFT  shift, and go to state 69

    $default  reduce using rule 41 (LESS)


State 107

   40 LESS: LESS T_LT SHIFT .
   45 SHIFT: SHIFT . T_LSHIFT ADD
   46      | SHIFT . T_RSHIFT ADD

    T_LSHIFT  shift, and go to state 68
    T_RSHIFT  shift, and go to state 69

    $default  reduce using rule 40 (LESS)


State 108

   42 LESS: LESS T_LEQUAL SHIFT .
   45 SHIFT: SHIFT . T_LSHIFT ADD
   46      | SHIFT . T_RSHIFT ADD

    T_LSHIFT  shift, and go to state 68
    T_RSHIFT  shift, and go to state 69

    $default  reduce using rule 42 (LESS)


State 109

   43 LESS: LESS T_GEQUAL SHIFT .
   45 SHIFT: SHIFT . T_LSHIFT ADD
   46      | SHIFT . T_RSHIFT ADD

    T_LSHIFT  shift, and go to state 68
    T_RSHIFT  shift, and go to state 69

    $default  reduce using rule 43 (LESS)


State 110

   45 SHIFT: SHIFT T_LSHIFT ADD .
   48 ADD: ADD . T_PLUS MUL
   49    | ADD . T_MINUS MUL

    T_PLUS   shift, and go to state 70
    T_MINUS  shift, and go to state 71

    $default  reduce using rule 45 (SHIFT)


State 111

   46 SHIFT: SHIFT T_RSHIFT ADD .
   48 ADD: ADD . T_PLUS MUL
   49    | ADD . T_MINUS MUL

    T_PLUS   shift, and go to state 70
    T_MINUS  shift, and go to state 71

    $default  reduce using rule 46 (SHIFT)


State 112

   48 ADD: ADD T_PLUS MUL .
   51 MUL: MUL . T_TIMES UNARY
   52    | MUL . T_DIVIDE UNARY
   53    | MUL . T_MOD UNARY

    T_TIMES   shift, and go to state 72
    T_DIVIDE  shift, and go to state 73
    T_MOD     shift, and go to state 74

    $default  reduce using rule 48 (ADD)


State 113

   49 ADD: ADD T_MINUS MUL .
   51 MUL: MUL . T_TIMES UNARY
   52    | MUL . T_DIVIDE UNARY
   53    | MUL . T_MOD UNARY

    T_TIMES   shift, and go to state 72
    T_DIVIDE  shift, and go to state 73
    T_MOD     shift, and go to state 74

    $default  reduce using rule 49 (ADD)


State 114

   51 MUL: MUL T_TIMES UNARY .

    $default  reduce using rule 51 (MUL)


State 115

   52 MUL: MUL T_DIVIDE UNARY .

    $default  reduce using rule 52 (MUL)


State 116

   53 MUL: MUL T_MOD UNARY .

    $default  reduce using rule 53 (MUL)


State 117

   16 SCOPE: SCOPE . STMT
   77 NEW_SCOPE: T_LCURL SCOPE . T_RCURL

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_RCURL     shift, and go to state 127
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 125
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 118

   73 ITER_ST: T_WHILE T_LBRAC . EXPR T_RBRAC STMT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 128
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 119

   74 ITER_ST: T_DO STMT . T_WHILE T_LBRAC EXPR T_RBRAC T_SEMIC

    T_WHILE  shift, and go to state 129


State 120

   71 IF_ST: T_IF T_LBRAC . EXPR T_RBRAC STMT
   72      | T_IF T_LBRAC . EXPR T_RBRAC STMT T_ELSE STMT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 130
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 121

   75 ITER_ST: T_FOR T_LBRAC . EXPR_ST EXPR_ST T_RBRAC STMT
   76        | T_FOR T_LBRAC . EXPR_ST EXPR_ST EXPR T_RBRAC STMT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR_ST      go to state 131
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 122

   69 JMP_ST: T_RETURN T_SEMIC .

    $default  reduce using rule 69 (JMP_ST)


State 123

   70 JMP_ST: T_RETURN EXPR . T_SEMIC

    T_SEMIC  shift, and go to state 132


State 124

    6 FUNDEC: TYPE T_VARIABLE T_LBRAC T_RBRAC T_LCURL SCOPE T_RCURL .

    $default  reduce using rule 6 (FUNDEC)


State 125

   16 SCOPE: SCOPE STMT .

    $default  reduce using rule 16 (SCOPE)


State 126

   19 EXPR_ST: EXPR T_SEMIC .

    $default  reduce using rule 19 (EXPR_ST)


State 127

   77 NEW_SCOPE: T_LCURL SCOPE T_RCURL .

    $default  reduce using rule 77 (NEW_SCOPE)


State 128

   73 ITER_ST: T_WHILE T_LBRAC EXPR . T_RBRAC STMT

    T_RBRAC  shift, and go to state 133


State 129

   74 ITER_ST: T_DO STMT T_WHILE . T_LBRAC EXPR T_RBRAC T_SEMIC

    T_LBRAC  shift, and go to state 134


State 130

   71 IF_ST: T_IF T_LBRAC EXPR . T_RBRAC STMT
   72      | T_IF T_LBRAC EXPR . T_RBRAC STMT T_ELSE STMT

    T_RBRAC  shift, and go to state 135


State 131

   75 ITER_ST: T_FOR T_LBRAC EXPR_ST . EXPR_ST T_RBRAC STMT
   76        | T_FOR T_LBRAC EXPR_ST . EXPR_ST EXPR T_RBRAC STMT

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR_ST      go to state 136
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 132

   70 JMP_ST: T_RETURN EXPR T_SEMIC .

    $default  reduce using rule 70 (JMP_ST)


State 133

   73 ITER_ST: T_WHILE T_LBRAC EXPR T_RBRAC . STMT

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 137
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 134

   74 ITER_ST: T_DO STMT T_WHILE T_LBRAC . EXPR T_RBRAC T_SEMIC

    T_LBRAC     shift, and go to state 25
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 138
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 135

   71 IF_ST: T_IF T_LBRAC EXPR T_RBRAC . STMT
   72      | T_IF T_LBRAC EXPR T_RBRAC . STMT T_ELSE STMT

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 139
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 136

   75 ITER_ST: T_FOR T_LBRAC EXPR_ST EXPR_ST . T_RBRAC STMT
   76        | T_FOR T_LBRAC EXPR_ST EXPR_ST . EXPR T_RBRAC STMT

    T_LBRAC     shift, and go to state 25
    T_RBRAC     shift, and go to state 140
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29

    EXPR         go to state 141
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45


State 137

   73 ITER_ST: T_WHILE T_LBRAC EXPR T_RBRAC STMT .

    $default  reduce using rule 73 (ITER_ST)


State 138

   74 ITER_ST: T_DO STMT T_WHILE T_LBRAC EXPR . T_RBRAC T_SEMIC

    T_RBRAC  shift, and go to state 142


State 139

   71 IF_ST: T_IF T_LBRAC EXPR T_RBRAC STMT .
   72      | T_IF T_LBRAC EXPR T_RBRAC STMT . T_ELSE STMT

    T_ELSE  shift, and go to state 143

    T_ELSE    [reduce using rule 71 (IF_ST)]
    $default  reduce using rule 71 (IF_ST)


State 140

   75 ITER_ST: T_FOR T_LBRAC EXPR_ST EXPR_ST T_RBRAC . STMT

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 144
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 141

   76 ITER_ST: T_FOR T_LBRAC EXPR_ST EXPR_ST EXPR . T_RBRAC STMT

    T_RBRAC  shift, and go to state 145


State 142

   74 ITER_ST: T_DO STMT T_WHILE T_LBRAC EXPR T_RBRAC . T_SEMIC

    T_SEMIC  shift, and go to state 146


State 143

   72 IF_ST: T_IF T_LBRAC EXPR T_RBRAC STMT T_ELSE . STMT

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 147
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 144

   75 ITER_ST: T_FOR T_LBRAC EXPR_ST EXPR_ST T_RBRAC STMT .

    $default  reduce using rule 75 (ITER_ST)


State 145

   76 ITER_ST: T_FOR T_LBRAC EXPR_ST EXPR_ST EXPR T_RBRAC . STMT

    T_LBRAC     shift, and go to state 25
    T_LCURL     shift, and go to state 77
    T_NUMBER    shift, and go to state 26
    T_VARIABLE  shift, and go to state 27
    T_SEMIC     shift, and go to state 78
    T_INCREM    shift, and go to state 28
    T_DECREM    shift, and go to state 29
    T_WHILE     shift, and go to state 79
    T_DO        shift, and go to state 80
    T_IF        shift, and go to state 81
    T_FOR       shift, and go to state 82
    T_INT       shift, and go to state 1
    T_VOID      shift, and go to state 2
    T_CHAR      shift, and go to state 3
    T_SHORT     shift, and go to state 4
    T_LONG      shift, and go to state 5
    T_FLOAT     shift, and go to state 6
    T_DOUBLE    shift, and go to state 7
    T_SIGNED    shift, and go to state 8
    T_RETURN    shift, and go to state 83

    TYPE         go to state 84
    EXPR_ST      go to state 86
    EXPR         go to state 87
    EXPR_ASSIGN  go to state 31
    EXPR_COND    go to state 32
    OR           go to state 33
    AND          go to state 34
    BOR          go to state 35
    BXOR         go to state 36
    BAND         go to state 37
    EQUAL        go to state 38
    LESS         go to state 39
    SHIFT        go to state 40
    ADD          go to state 41
    MUL          go to state 42
    UNARY        go to state 43
    POSTFIX      go to state 44
    PRIMATIVE    go to state 45
    STMT         go to state 148
    JMP_ST       go to state 89
    IF_ST        go to state 90
    ITER_ST      go to state 91
    NEW_SCOPE    go to state 92
    DEC_ST       go to state 93


State 146

   74 ITER_ST: T_DO STMT T_WHILE T_LBRAC EXPR T_RBRAC T_SEMIC .

    $default  reduce using rule 74 (ITER_ST)


State 147

   72 IF_ST: T_IF T_LBRAC EXPR T_RBRAC STMT T_ELSE STMT .

    $default  reduce using rule 72 (IF_ST)


State 148

   76 ITER_ST: T_FOR T_LBRAC EXPR_ST EXPR_ST EXPR T_RBRAC STMT .

    $default  reduce using rule 76 (ITER_ST)
